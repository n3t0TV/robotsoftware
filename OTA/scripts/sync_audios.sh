#!/bin/bash

bold=$(tput bold)
normal=$(tput sgr0)

### START OF CODE GENERATED BY Argbash v2.9.0 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info
# Generated online by https://argbash.io/generate


die()
{
	local _ret="${2:-1}"
	test "${_PRINT_HELP:-no}" = yes && print_help >&2
	echo "$1" >&2
	exit "${_ret}"
}


begins_with_short_option()
{
	local first_option all_short_options='h'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_uid="off"


print_help()
{
	printf '%s\n' "This scripts downloads custom audio files according the uid provided"
	printf 'Usage: %s [--uid <arg>] [-h|--help]\n' "$0"
	printf '\t%s\n' "--uid: pass uid of vehicle (default: 'off')"
	printf '\t%s\n' "-h, --help: Prints help"
}


parse_commandline()
{
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			--uid)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_uid="$2"
				shift
				;;
			--uid=*)
				_arg_uid="${_key##--uid=}"
				;;
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
				;;
		esac
		shift
	done
}

parse_commandline "$@"

### END OF CODE GENERATED BY Argbash (sortof) ### ])

################### Main ######################

if [[ "${_arg_uid}" == "off" ]]; then
	echo "${bold}Error: ${normal}Must pass a vehicle UID option (--uid <valid_uid>)"
	sleep 1
	exit 1
fi

re='^[0-9]+'
if ! [[ $_arg_uid =~ $re ]]; then
	echo "${bold}Error: ${normal}Must pass a valid vehicle UID (Integer), get <${_arg_uid}>"
	sleep 1
	exit 1
fi

VEHICLE_UID="${_arg_uid}"
CUSTOM_AUDIOS_DIR="${HOME}/braintemp/custom_audios"
CUSTOM_AUDIOS_FILE="${CUSTOM_AUDIOS_DIR}/${VEHICLE_UID}.zip"
DOWNLOAD_URL="https://storage.googleapis.com/custom_audios/${VEHICLE_UID}/${VEHICLE_UID}.zip"

mkdir -p "${CUSTOM_AUDIOS_DIR}"
if [ "$?" -ne "0" ]; then
    echo "${bold}Filesystem error:${normal} cannot create dir ${CUSTOM_AUDIOS_DIR}"
	exit 1
else
    wget -O "${CUSTOM_AUDIOS_FILE}" "$DOWNLOAD_URL"
    if [ "$?" -ne "0" ]; then
        echo "${bold}Download error:${normal} cannot get file ${DOWNLOAD_URL}"
        # Remove the empty file #
        rm "${CUSTOM_AUDIOS_FILE}"
        exit 1
    else
        7za x -y "${CUSTOM_AUDIOS_FILE}" -o"${CUSTOM_AUDIOS_DIR}"
        if [ "$?" -ne "0" ]; then
            echo "${bold}Extract error:${normal} cannot extract file ${CUSTOM_AUDIOS_FILE}"
            exit 1
        fi
    fi
fi

